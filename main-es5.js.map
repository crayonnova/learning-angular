{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/directive/highlight.directive.ts","webpack:///src/app/directive/unless.directive.ts","webpack:///src/app/server/server-detail/server-detail.component.ts","webpack:///src/app/server/server-detail/server-detail.component.html","webpack:///src/app/server/server-item/server-item.component.ts","webpack:///src/app/server/server-item/server-item.component.html","webpack:///src/app/server/server.component.ts","webpack:///src/app/server/server.component.html","webpack:///src/app/server/server.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","console","log","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","HighlightDirective","el","renderer","backgroundColor","appHighlight","defaultColor","UnlessDirective","elementRef","viewContainerRef","value","createEmbeddedView","clear","ServerDetailComponent","changes","ServerItemComponent","showServerDetail","removeServerItem","informRemove","item","emit","serverItem","status","onShowDetail","updateStatus","onRemoveServer","ServerComponent","servers","data","serverDetailItem","itemToRemove","findIndex","name","splice","isExist","find","nativeElement","alert","push","check","checked","detail","onSubmit","server","_name","_status","_detail","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent{\r\n  title = 'angular-learning-test';\r\n\r\n  constructor(){\r\n    console.log('app comp constructor() called');\r\n  }\r\n \r\n\r\n  \r\n}\r\n","<div class=\"container-fluid\">\r\n    <h1>Server Listing App</h1>\r\n    <app-server></app-server>\r\n</div>\r\n\r\n\r\n","import { BrowserModule, Title } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport {FormsModule} from \"@angular/forms\";\r\n\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { ServerComponent } from './server/server.component';\r\nimport { ServerItemComponent } from './server/server-item/server-item.component';\r\nimport { ServerDetailComponent } from './server/server-detail/server-detail.component';\nimport { HighlightDirective } from './directive/highlight.directive';\nimport { UnlessDirective } from './directive/unless.directive';\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ServerComponent,\r\n    ServerItemComponent,\r\n    ServerDetailComponent,\r\n    HighlightDirective,\r\n    UnlessDirective,\r\n\r\n  \r\n\r\n  ],\r\n  imports: [\r\n  \r\n    BrowserModule,\r\n    FormsModule\r\n  ],\r\n  providers: [\r\n    \r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Directive, ElementRef, HostListener, Input, Renderer2, HostBinding, OnInit } from '@angular/core';\n\n@Directive({\n  selector: '[appHighlight]'\n})\nexport class HighlightDirective implements OnInit {\n  @Input() appHighlight : string;\n  @Input() defaultColor : string;\n\n  @HostBinding('style.backgroundColor') backgroundColor : string; \n  constructor(private el : ElementRef, private renderer : Renderer2) { \n   \n  }\n\n  @HostListener('mouseenter') onMouseEnter(){\n    // this.el.nativeElement.style.backgroundColor = this.appHighlight || 'green';\n    // this.renderer.setStyle(this.el.nativeElement,'background-color', this.appHighlight)\n    this.backgroundColor = this.appHighlight\n  }\n  @HostListener('mouseleave') onMouseLeave(){\n    // this.renderer.setStyle(this.el.nativeElement,'background-color',this.appHighlight)\n    this.backgroundColor = this.defaultColor\n  }\n\n  ngOnInit(){\n    this.backgroundColor = this.defaultColor;\n    // console.log(this.el.nativeElement.style.color = 'red' || 'blue');\n  }\n\n}\n","// import { Directive, ViewContainerRef,TemplateRef, Input } from '@angular/core';\n\n// @Directive({\n//   selector: '[appUnless]'\n// })\n// export class UnlessDirective {\n//   @Input() appUnless : boolean;\n\n//   ngOnInit(){\n//     // console.log(this.appUnless);\n//     this.appUnless? this.vcRef.createEmbeddedView(this.templateRef):\n//     this.vcRef.clear()\n//   }\n\n//   constructor(private templateRef : TemplateRef<HTMLElement>, private vcRef : ViewContainerRef) {\n    \n//    }\n\n// }\n\nimport { Directive, TemplateRef, ViewContainerRef, Input } from '@angular/core';\n\n@Directive({\n  selector : '[appUnless]'\n})\n\nexport class UnlessDirective {\n  @Input() set appUnless(value: boolean){\n    if(value){\n      this.viewContainerRef.createEmbeddedView(this.elementRef)\n    }else{\n      this.viewContainerRef.clear()\n    }\n  };\n\n  constructor(private elementRef : TemplateRef<HTMLElement>,private viewContainerRef : ViewContainerRef){\n\n  }\n\n  ngOnInit(){\n  \n  }\n}\n","import { Component, OnInit,Input,OnChanges, SimpleChanges } from '@angular/core';\nimport { server } from '../server';\n\n@Component({\n  selector: 'app-server-detail',\n  templateUrl: './server-detail.component.html',\n  styleUrls: ['./server-detail.component.css']\n})\nexport class ServerDetailComponent implements OnInit,OnChanges {\n\n  @Input() serverDetailItem : server | null;\n \n  constructor() {\n  \n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    console.log('hre is changess===> ',changes);\n  }\n\n  ngOnInit(): void {\n\n  }\n\n}\n","<div class=\"detail\">\n    <h1>  {{ serverDetailItem.name }} \n\n        <span [className]=\"serverDetailItem.status? 'asdf' : 'offline' \">&#9899;</span>\n    </h1>\n    <p> {{ serverDetailItem.detail }}</p>\n</div>\n","import { Component, OnInit,EventEmitter,Input,Output } from '@angular/core';\r\nimport { server } from '../server';\r\n\r\n@Component({\r\n  selector: 'app-server-item',\r\n  // inputs : ['serverItem'],\r\n  // outputs : ['showServerDetail'],\r\n  templateUrl: './server-item.component.html',\r\n  styleUrls: ['./server-item.component.css']\r\n})\r\nexport class ServerItemComponent implements OnInit {\r\n\r\n  @Input() serverItem: server;\r\n  @Output() showServerDetail = new EventEmitter<server>();\r\n  @Output() removeServerItem = new EventEmitter<server>();\r\n  @Output() informRemove = new EventEmitter<boolean>();\r\n  constructor() { \r\n    console.log(' item constrctor() called');\r\n  }\r\n\r\n  onShowDetail(item : server){\r\n    this.showServerDetail.emit(item)\r\n    this.informRemove.emit(true)\r\n  }\r\n\r\n  updateStatus() : void{\r\n    this.serverItem.status = !this.serverItem.status;\r\n  }\r\n\r\n  onRemoveServer(item : server) {\r\n    this.removeServerItem.emit(item)\r\n  }\r\n\r\n  ngOnInit(): void {\r\n   console.log('item ngOnInit() callled');\r\n  }\r\n\r\n}\r\n","<p (click)='onShowDetail(serverItem)'> <ng-content></ng-content>\r\n    <button (click)='updateStatus()' class=\"btn btn-primary mx-2\">change status</button>\r\n    <button class=\"btn btn-danger\" (click)='onRemoveServer(serverItem)'><i class=\"fa fa-trash\"></i></button>\r\n</p>\r\n","import { Component, OnInit, ViewChild, ElementRef, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { server } from './server'\r\n\r\n@Component({\r\n  selector: 'app-server',\r\n  templateUrl: './server.component.html',\r\n  styleUrls: ['./server.component.css']\r\n})\r\nexport class ServerComponent implements OnInit {\r\n\r\n  public serverDetailItem : server;\r\n  @ViewChild('name') name : ElementRef;\r\n  @ViewChild('check') check : ElementRef;\r\n  @ViewChild('detail') detail : ElementRef;\r\n  range : number;\r\n\r\n  servers : server[] = [];\r\n\r\n  constructor() {\r\n    \r\n   }\r\n\r\n \r\n  onShowServerDetail(data : server) {\r\n    this.serverDetailItem = data;\r\n  \r\n  }\r\n\r\n  onRemoveServer(data : server) {\r\n    const itemToRemove = this.servers.findIndex( item => item.name == data.name)\r\n    this.servers.splice(itemToRemove,1)\r\n    this.serverDetailItem = null;\r\n  }\r\n\r\n  onSubmit(){\r\n  const isExist = this.servers.find(item => item.name == this.name.nativeElement.value)\r\n\r\n  if(isExist){\r\n    alert('already exist')\r\n    return;\r\n  }\r\n\r\n  this.servers.push(new server(this.name.nativeElement.value,this.check.nativeElement.checked,this.detail.nativeElement.value))\r\n  console.log(this.servers);\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n   \r\n  }\r\n\r\n}\r\n","<div class=\"row\">\n    <div class=\"col-md-8\">\n\n        <div class=\"form-group\">\n            <div class=\"input-group\">\n                <input type=\"text\" class=\"form-control\" \n                #name \n                placeholder=\"eg. server name\" aria-label=\"Username\" aria-describedby=\"basic-addon1\">\n                    <div class=\"input-group-append\">\n                        <span class=\"input-group-text px-1 py-0\" id=\"basic-addon1\">\n                            <input type=\"checkbox\" id=\"online\" \n                            #check\n                             class=\"\"> \n                            <label for=\"online\" class=\"m-0\">online </label>\n                        </span>\n                    </div>\n              </div>\n            <div class=\"pt-3\">\n                <textarea class=\"form-control\"\n                #detail\n                placeholder=\"Descripton\"\n                name=\"\" id=\"\" cols=\"30\" rows=\"10\"></textarea>\n            </div>\n            <div class=\"pt-3\">\n        \n                <input type=\"submit\" class=\"btn btn-success\" value='Submit'\n                    (click) = 'onSubmit()'\n                >\n            </div>\n            \n          \n        </div>\n    </div>\n</div>\n\n<!-- <div *appUnless = 'true' >hello</div>\n<label [appHighlight]=\"'green'\" [defaultColor]=\"'transparent'\" for=\"customRange3\">Example range</label> -->\n<!-- <appHighlight>This is here</appHighlight>     -->\n<!-- <input type=\"range\" #ranger (input)='checkChange(ranger)' class=\"custom-range\" value=\"0\" min=\"0\" max=\"100\" step=\"0\" id=\"customRange3\">\n<input type=\"number\" class=\"form-control\" value='{{ range ? range : 0 }}'>  -->\n\n<div class=\"row\">\n    <div class=\"col-md-6\">\n\n        <app-server-item \n    *ngFor= 'let server of servers'\n    [serverItem] = 'server'\n    (showServerDetail) = 'onShowServerDetail($event)'\n    (removeServerItem) = 'onRemoveServer($event)'\n>\n\n<!-- ng-content -->\n<span>{{ server.name }}</span>\n<span [ngClass] = \"{'text-danger' : !server.status, 'text-success' : server.status}\"> {{ server.status? 'Online': 'Offline'}}</span>\n<!-- ng-content -->\n\n</app-server-item>\n\n    </div>\n    <div class=\"col-md-6\">\n        <app-server-detail *ngIf='serverDetailItem' [serverDetailItem] = 'serverDetailItem'></app-server-detail>\n    </div>\n</div>\n\n","export class server{\r\n    name : string;\r\n    status : boolean;\r\n    detail : string;\r\n    constructor(_name : string, _status : boolean, _detail? : string ){\r\n        this.name = _name;\r\n        this.status = _status;\r\n        this.detail = _detail\r\n    }\r\n    \r\n   \r\n\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}